generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserType {
  ADMIN
  OPERATORS
  CUSTOMER
  STAFF
  SUPER_ADMIN
}

model Customer {
  customerId              String             @id @default(uuid())
  fullName                String
  phoneNumber             String
  contactAddress          String
  poc                     PointOfConsumption @relation(fields: [pointOfConsumptionPocId], references: [pocId])
  gender                  Gender
  thirdPartyPermission    Permission
  occupation              String
  product                 ProductType
  pointOfConsumptionPocId String
  Voucher                 Voucher[]
  createdAt               DateTime           @default(now()) @db.Timestamptz()
  VoucherDispense         VoucherDispense[]
}

enum Permission {
  YES
  NO
}

model PointOfConsumption {
  pocId        String      @id @default(uuid())
  Customer     Customer[]
  // staffAssigned Staff
  address      String
  contactName  String
  conatctPhone String
  email        String
  productType  ProductType
  topUp        String
  createdAt    DateTime    @default(now()) @db.Timestamptz()
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

model Staff {
  staffId         String            @id @default(uuid())
  fullName        String
  email           String
  phoneNumber     String
  contactAddress  String
  gender          Gender
  createdAt       DateTime          @default(now()) @db.Timestamptz()
  StaffPerfomance StaffPerfomance[]
}

enum ProductType {
  PETROL
  DISEL
}

model Operators {
  operatorId      String            @id @default(uuid())
  fullName        String
  phoneNUmber     String            @unique
  email           String            @unique
  contactAddress  String
  designation     String
  createdAt       DateTime          @default(now()) @db.Timestamptz()
  VoucherDispense VoucherDispense[]
}

model Admin {
  adminId        String   @id @default(uuid())
  fullName       String
  password       String
  phoneNUmber    String   @unique
  email          String   @unique
  contactAddress String
  designation    String
  createdAt      DateTime @default(now()) @db.Timestamptz()
}

model Voucher {
  voucherId       String            @id @default(uuid())
  voucherCode     String            @unique
  customer        Customer          @relation(fields: [customerId], references: [customerId])
  customerId      String
  createdAt       DateTime          @default(now()) @db.Timestamptz()
  collected       Boolean
  VoucherDispense VoucherDispense[]
  productType     ProductType
}

model VoucherDispense {
  Id                 String      @id @default(uuid())
  voucher            Voucher     @relation(fields: [voucherVoucherId], references: [voucherId])
  createdAt          DateTime    @default(now()) @db.Timestamptz()
  approvedBy         Operators   @relation(fields: [userId], references: [operatorId])
  userId             String
  dispenseDate       DateTime    @default(now()) @db.Timestamptz()
  vehicle            String
  vehicleNUmber      String
  usedBy             Customer    @relation(fields: [customerCustomerId], references: [customerId])
  dateUsed           DateTime    @default(now()) @db.Timestamptz()
  voucherVoucherId   String
  customerCustomerId String
  productType        ProductType
}

model StaffPerfomance {
  id                 String   @id @default(uuid())
  staff              Staff    @relation(fields: [staffId], references: [staffId])
  staffId            String
  createdAt          DateTime @default(now()) @db.Timestamptz()
  cusomtomersHandled Int
  productsDispensed  Int
}

// npx prisma migrate dev --name init
// npx prisma format
